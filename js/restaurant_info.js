let restaurant;var newMap;document.addEventListener("DOMContentLoaded",e=>{initMap()}),initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.newMap=L.map("map",{center:[t.latlng.lat,t.latlng.lng],zoom:16,scrollWheelZoom:!1}),L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}",{mapboxToken:"pk.eyJ1IjoiZmFycmVsbHNjcmlwdCIsImEiOiJjamJiaTl3dHMxOGxsMzJwZTlmYnN4ZHN5In0.6Ey50el0atwjDygO_cO0sA",maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets"}).addTo(newMap),DBHelper.mapMarkerForRestaurant(self.restaurant,self.newMap))})}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t,(t,a)=>{self.restaurant=a,a?(fillRestaurantHTML(),e(null,a)):console.error(t)}):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name;const t=document.getElementById("rating"),a=5-DBHelper.ratingForRestaurant(e);for(let a=0;a<DBHelper.ratingForRestaurant(e);a++){const e=document.createElement("img");e.className="restaurant__star restaurant__star--full",e.src="/img/fullstar.svg",e.alt="",t.append(e)}for(let e=0;e<a;e++){const e=document.createElement("img");e.className="restaurant__star restaurant__star--empty",e.src="/img/emptystar.svg",e.alt="",t.append(e)}const n=document.getElementById("restaurant-address");n.innerHTML=e.address;const r=document.createElement("img");r.className="restaurantdetail__icon",r.src="/img/waypoint.svg",r.alt="",n.prepend(r);const s=document.getElementById("restaurant-img");s.className="restaurant-img",s.src=DBHelper.imageUrlForRestaurant(e),s.alt=DBHelper.imageTextForRestaurant(e),s.srcset=DBHelper.imageSrcSetForRestaurant(e);const l=document.getElementById("restaurant-cuisine");l.innerHTML=e.cuisine_type;const c=document.createElement("img");if(c.className="restaurantdetail__icon",c.src="/img/cuisine.svg",c.alt="",l.prepend(c),e.operating_hours){fillRestaurantHoursHTML();const e=document.getElementById("restaurantdetail__hourscontainer"),t=document.createElement("img");t.className="restaurantdetail__icon",t.src="/img/clock.svg",t.alt="",e.prepend(t)}fillReviewsHTML()}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let a in e){const n=document.createElement("tr"),r=document.createElement("td");r.className="restaurantdetail__day",r.innerHTML=a,n.appendChild(r);const s=document.createElement("td");s.className="restaurantdetail__hour",s.innerHTML=e[a],n.appendChild(s),t.appendChild(n)}}),fillReviewsHTML=((e=self.restaurant.reviews)=>{const t=document.getElementById("reviews-container"),a=document.createElement("h3");if(a.innerHTML="Reviews",a.className="restaurantdetail__reviewstitle",t.appendChild(a),!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const n=document.getElementById("reviews-list");e.forEach(e=>{n.appendChild(createReviewHTML(e))}),t.appendChild(n)}),createReviewHTML=(e=>{const t=document.createElement("li");t.className="restaurantdetail__review";const a=document.createElement("div");a.className="restaurantdetail__commentheader";const n=document.createElement("div");n.className="restaurantdetail__avatarcontainer";const r=document.createElement("img");r.src="/img/avatar.svg",r.className="restaurantdetail__avatar",r.alt="Avatar photo",n.appendChild(r),a.appendChild(n);const s=document.createElement("div");s.className="restaurantdetail__namecontainer";const l=document.createElement("p");l.innerHTML=e.name,s.appendChild(l);const c=document.createElement("p");c.className="restaurantdetail__individualreviewrating";const o=5-parseInt(e.rating);for(let t=0;t<e.rating;t++){const e=document.createElement("img");e.className="restaurant__star restaurant__star--full",e.src="/img/fullstar.svg",e.alt="",c.append(e)}for(let e=0;e<o;e++){const e=document.createElement("img");e.className="restaurant__star restaurant__star--empty",e.src="/img/emptystar.svg",e.alt="",c.append(e)}s.appendChild(c);const m=document.createElement("p");m.className="restaurantdetail__reviewdate";const i=new Date(e.date),d=new Date,u=Math.round((d-i)/1e3/60/60/24);m.innerHTML=`${u} ago`,s.appendChild(m),a.appendChild(s),t.appendChild(a);const p=document.createElement("p");return p.innerHTML=e.comments,t.appendChild(p),t}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const a=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return a?a[2]?decodeURIComponent(a[2].replace(/\+/g," ")):"":null});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
