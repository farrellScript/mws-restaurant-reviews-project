let restaurant;var newMap;if("serviceWorker"in navigator){function _trackInstalling(e){e.addEventListener("statechange",function(){"installed"==e.state&&_updateReady(e)})}var focusedElement,refreshing;function _updateReady(e){document.getElementById("update-version").addEventListener("click",function(){e.postMessage({action:"skipWaiting"})}),document.getElementById("dismiss-version").addEventListener("click",function(){document.getElementById("toast").classList.remove("active"),focusedElement.focus()}),document.getElementById("toast").addEventListener("keydown",function(e){9===e.keyCode&&(e.shiftKey?document.activeElement===a&&(e.preventDefault(),n.focus()):document.activeElement===n&&(e.preventDefault(),a.focus())),27===e.keyCode&&(document.getElementById("toast").classList.remove("active"),focusedElement.focus())}),(focusedElement=document.activeElement).tabindex=1;var t=document.querySelectorAll("#toast p, #update-version, #dismiss-version"),a=(t=Array.prototype.slice.call(t))[0],n=t[t.length-1];document.getElementById("toast").classList.add("active"),document.querySelector("#toast p").focus()}navigator.serviceWorker.register("/sw.js").then(function(e){navigator.serviceWorker.controller&&(e.waiting?_updateReady():e.installing?_trackInstalling(e.installing):e.addEventListener("updatefound",function(){_trackInstalling(e.installing)}))}).catch(function(e){console.log("error registering service worker: ",e)}),navigator.serviceWorker.addEventListener("controllerchange",function(){console.log("controller change"),refreshing||(window.location.reload(),refreshing=!0)})}document.addEventListener("DOMContentLoaded",e=>{initMap()}),initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.error(e):(self.newMap=L.map("map",{center:[t.latlng.lat,t.latlng.lng],zoom:16,scrollWheelZoom:!1}),L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token={mapboxToken}",{mapboxToken:"pk.eyJ1IjoiZmFycmVsbHNjcmlwdCIsImEiOiJjamJiaTl3dHMxOGxsMzJwZTlmYnN4ZHN5In0.6Ey50el0atwjDygO_cO0sA",maxZoom:18,attribution:'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',id:"mapbox.streets"}).addTo(newMap),DBHelper.mapMarkerForRestaurant(self.restaurant,self.newMap))})}),fetchRestaurantFromURL=(e=>{if(self.restaurant)return void e(null,self.restaurant);const t=getParameterByName("id");t?DBHelper.fetchRestaurantById(t,(t,a)=>{self.restaurant=a,a?(fillRestaurantHTML(),e(null,a)):console.error(t)}):(error="No restaurant id in URL",e(error,null))}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name;const t=document.getElementById("rating"),a=5-DBHelper.ratingForRestaurant(e);for(let a=0;a<DBHelper.ratingForRestaurant(e);a++){const e=document.createElement("img");e.className="restaurant__star restaurant__star--full",e.src="/img/fullstar.svg",e.alt="",t.append(e)}for(let e=0;e<a;e++){const e=document.createElement("img");e.className="restaurant__star restaurant__star--empty",e.src="/img/emptystar.svg",e.alt="",t.append(e)}const n=document.getElementById("restaurant-address");n.innerHTML=e.address;const r=document.createElement("img");r.className="restaurantdetail__icon",r.src="/img/waypoint.svg",r.alt="",n.prepend(r);const s=document.getElementById("restaurant-img");s.className="restaurant-img",s.src=DBHelper.imageUrlForRestaurant(e),s.alt=DBHelper.imageTextForRestaurant(e),s.srcset=DBHelper.imageSrcSetForRestaurant(e);const o=document.getElementById("restaurant-cuisine");o.innerHTML=e.cuisine_type;const c=document.createElement("img");if(c.className="restaurantdetail__icon",c.src="/img/cuisine.svg",c.alt="",o.prepend(c),e.operating_hours){fillRestaurantHoursHTML();const e=document.getElementById("restaurantdetail__hourscontainer"),t=document.createElement("img");t.className="restaurantdetail__icon",t.src="/img/clock.svg",t.alt="",e.prepend(t)}fillReviewsHTML()}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let a in e){const n=document.createElement("tr"),r=document.createElement("td");r.className="restaurantdetail__day",r.innerHTML=a,n.appendChild(r);const s=document.createElement("td");s.className="restaurantdetail__hour",s.innerHTML=e[a],n.appendChild(s),t.appendChild(n)}}),fillReviewsHTML=((e=self.restaurant.reviews)=>{const t=document.getElementById("reviews-container"),a=document.createElement("h3");if(a.innerHTML="Reviews",a.className="restaurantdetail__reviewstitle",t.appendChild(a),!e){const e=document.createElement("p");return e.innerHTML="No reviews yet!",void t.appendChild(e)}const n=document.getElementById("reviews-list");e.forEach(e=>{n.appendChild(createReviewHTML(e))}),t.appendChild(n)}),createReviewHTML=(e=>{const t=document.createElement("li");t.className="restaurantdetail__review";const a=document.createElement("div");a.className="restaurantdetail__commentheader";const n=document.createElement("div");n.className="restaurantdetail__avatarcontainer";const r=document.createElement("img");r.src="/img/avatar.svg",r.className="restaurantdetail__avatar",r.alt="Avatar photo",n.appendChild(r),a.appendChild(n);const s=document.createElement("div");s.className="restaurantdetail__namecontainer";const o=document.createElement("p");o.innerHTML=e.name,s.appendChild(o);const c=document.createElement("p");c.className="restaurantdetail__individualreviewrating";const l=5-parseInt(e.rating);for(let t=0;t<e.rating;t++){const e=document.createElement("img");e.className="restaurant__star restaurant__star--full",e.src="/img/fullstar.svg",e.alt="",c.append(e)}for(let e=0;e<l;e++){const e=document.createElement("img");e.className="restaurant__star restaurant__star--empty",e.src="/img/emptystar.svg",e.alt="",c.append(e)}s.appendChild(c);const i=document.createElement("p");i.className="restaurantdetail__reviewdate";const d=new Date(e.date),m=new Date,u=Math.round((m-d)/1e3/60/60/24);i.innerHTML=`${u} ago`,s.appendChild(i),a.appendChild(s),t.appendChild(a);const p=document.createElement("p");return p.innerHTML=e.comments,t.appendChild(p),t}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const a=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return a?a[2]?decodeURIComponent(a[2].replace(/\+/g," ")):"":null});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc3RhdXJhbnRfaW5mby5qcyJdLCJuYW1lcyI6WyJyZXN0YXVyYW50IiwibmV3TWFwIiwibmF2aWdhdG9yIiwid29ya2VyIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl91cGRhdGVSZWFkeSIsImZvY3VzZWRFbGVtZW50IiwicmVmcmVzaGluZyIsInBvc3RNZXNzYWdlIiwiYWN0aW9uIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImNsYXNzTGlzdCIsInJlbW92ZSIsImZvY3VzIiwiZSIsImtleUNvZGUiLCJzaGlmdEtleSIsInByZXZlbnREZWZhdWx0IiwiZmlyc3RUYWJTdG9wIiwibGFzdFRhYlN0b3AiLCJ0YWJpbmRleCIsImFjdGl2ZUVsZW1lbnQiLCJmb2N1c2FibGVFbGVtZW50cyIsIkFycmF5IiwicHJvdG90eXBlIiwic2xpY2UiLCJjYWxsIiwibGVuZ3RoIiwicXVlcnlTZWxlY3RvciIsImFkZCIsInNlcnZpY2VXb3JrZXIiLCJyZWdpc3RlciIsInRoZW4iLCJyZXMiLCJjb250cm9sbGVyIiwid2FpdGluZyIsImluc3RhbGxpbmciLCJfdHJhY2tJbnN0YWxsaW5nIiwiY29uc29sZSIsImVycm9yIiwibG9nIiwid2luZG93IiwibG9jYXRpb24iLCJyZWxvYWQiLCJldmVudCIsImluaXRNYXAiLCJzZWxmIiwiY2VudGVyIiwiem9vbSIsIkwiLCJtYXAiLCJ0aWxlTGF5ZXIiLCJsYXRsbmciLCJsYXQiLCJsbmciLCJtYXBib3hUb2tlbiIsIm1heFpvb20iLCJpZCIsIkRCSGVscGVyIiwibWFwTWFya2VyRm9yUmVzdGF1cmFudCIsImF0dHJpYnV0aW9uIiwiYWRkVG8iLCJmZXRjaFJlc3RhdXJhbnRGcm9tVVJMIiwiZ2V0UGFyYW1ldGVyQnlOYW1lIiwiY2FsbGJhY2siLCJmZXRjaFJlc3RhdXJhbnRCeUlkIiwiZmlsbFJlc3RhdXJhbnRIVE1MIiwicmF0aW5nIiwiaW5uZXJIVE1MIiwiZW1wdHlTdGFycyIsImZ1bGxzdGFyIiwiY2xhc3NOYW1lIiwicmF0aW5nRm9yUmVzdGF1cmFudCIsImFsdCIsImkiLCJjcmVhdGVFbGVtZW50IiwiZW1wdHlzdGFyIiwic3JjIiwiYWRkcmVzcyIsImFkZHJlc3NpY29uIiwiaW1hZ2UiLCJzcmNzZXQiLCJpbWFnZVNyY1NldEZvclJlc3RhdXJhbnQiLCJjdWlzaW5lIiwiY3Vpc2luZWljb24iLCJjdWlzaW5lX3R5cGUiLCJvcGVyYXRpbmdfaG91cnMiLCJmaWxsUmVzdGF1cmFudEhvdXJzSFRNTCIsImhvdXJzaWNvbiIsInByZXBlbmQiLCJmaWxsUmV2aWV3c0hUTUwiLCJob3VycyIsImRheSIsIm9wZXJhdGluZ0hvdXJzIiwicm93IiwiYXBwZW5kQ2hpbGQiLCJ0aW1lIiwia2V5IiwiY29udGFpbmVyIiwicmV2aWV3cyIsInRpdGxlIiwibm9SZXZpZXdzIiwidWwiLCJmb3JFYWNoIiwicmV2aWV3IiwiY3JlYXRlUmV2aWV3SFRNTCIsImxlZnRkaXYiLCJjb21tZW50SGVhZGVyIiwiYXZhdGFyIiwicmlnaHRkaXYiLCJpbmRpdmlkdWFscmF0aW5nIiwibmFtZSIsInBhcnNlSW50IiwiYXBwZW5kIiwiZGF0ZSIsImRheXNkaWZmZXJlbmNlIiwidG9kYXlkYXRlIiwiRGF0ZSIsInJvdW5kIiwicmV2aWV3ZGF0ZSIsImNvbW1lbnRzIiwibGkiLCJ1cmwiLCJyZXN1bHRzIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwicmVwbGFjZSIsIlJlZ0V4cCIsImV4ZWMiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLFdBQ0osSUFBSUMsT0FLSixHQUFJLGtCQUFtQkMsVUFBVyxDQTZCOUJDLFNBQU9DLGlCQUFpQkQsR0FDdEJBLEVBQUlBLGlCQUFnQixjQUFZLFdBQ2pCQSxhQUFiRSxFQUFBQSxPQUNEQSxhQUFBRixLQUtMLElBQUFHLGVBZ0VFQyxXQTVEQSxTQUFBRixhQUFBRixHQUVFQSxTQUFPSyxlQUFhQyxrQkFBT0wsaUJBQTNCLFFBQUEsV0FERkQsRUFBQUssYUFBQUMsT0FBQSxrQkFLRUMsU0FBQUEsZUFBU0MsbUJBQXdC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c0JBQ2RnQixLQUFLTCxHQUN2QixPQUFLQyxFQUVBQSxFQUFRLEdBRU5DLG1CQUFtQkQsRUFBUSxHQUFHRSxRQUFRLE1BQU8sTUFEM0MsR0FGQSIsImZpbGUiOiJyZXN0YXVyYW50X2luZm8uanMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgcmVzdGF1cmFudDtcbnZhciBuZXdNYXA7XG5cbi8qKlxuICogQ2hlY2sgdG8gc2VlIGlmIHNlcnZpY2Ugd29ya2VyIGlzIHN1cHBvcnRlZCBieSB0aGUgYnJvd3NlciBcbiAqL1xuaWYgKCdzZXJ2aWNlV29ya2VyJyBpbiBuYXZpZ2F0b3IpIHtcbiAgXG4gIC8qIGlmIGl0IGlzLCByZWdpc3RlciB0aGUgc2VydmljZSB3b3JrZXIgKi9cbiAgbmF2aWdhdG9yLnNlcnZpY2VXb3JrZXIucmVnaXN0ZXIoJy9zdy5qcycpLnRoZW4oZnVuY3Rpb24ocmVzKXtcblxuICAgIC8vIEFscmVhZHkgb24gdGhlIGxhdGVzdCB2ZXJzaW9uLCBiYWlsXG4gICAgaWYoIW5hdmlnYXRvci5zZXJ2aWNlV29ya2VyLmNvbnRyb2xsZXIpe1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyBDaGVjayB0byBzZWUgaWYgdGhlcmUncyBhIHdhaXRpbmcgc2VydmljZSB3b3JrZXJcbiAgICBpZiAocmVzLndhaXRpbmcpe1xuICAgICAgX3VwZGF0ZVJlYWR5KCk7XG4gICAgICByZXR1cm4gXG4gICAgfVxuXG4gICAgaWYgKHJlcy5pbnN0YWxsaW5nKSB7XG4gICAgICBfdHJhY2tJbnN0YWxsaW5nKHJlcy5pbnN0YWxsaW5nKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgcmVzLmFkZEV2ZW50TGlzdGVuZXIoJ3VwZGF0ZWZvdW5kJywgZnVuY3Rpb24oKSB7XG4gICAgICBfdHJhY2tJbnN0YWxsaW5nKHJlcy5pbnN0YWxsaW5nKTtcbiAgICB9KTtcbiAgICBcbiAgfSkuY2F0Y2goZnVuY3Rpb24oZXJyb3Ipe1xuICAgIGNvbnNvbGUubG9nKCdlcnJvciByZWdpc3RlcmluZyBzZXJ2aWNlIHdvcmtlcjogJyxlcnJvcilcbiAgfSk7XG4gIFxuICBmdW5jdGlvbiBfdHJhY2tJbnN0YWxsaW5nKHdvcmtlcil7XG4gICAgd29ya2VyLmFkZEV2ZW50TGlzdGVuZXIoJ3N0YXRlY2hhbmdlJyxmdW5jdGlvbigpe1xuICAgICAgaWYgKHdvcmtlci5zdGF0ZSA9PSAnaW5zdGFsbGVkJyl7XG4gICAgICAgIF91cGRhdGVSZWFkeSh3b3JrZXIpO1xuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICB2YXIgZm9jdXNlZEVsZW1lbnQ7XG4gIC8qKlxuICAgKiBOb3RpZmllcyB0aGUgdXNlciB0aGF0IGFuIHVwZGF0ZWQgU1cgaXMgYXZhaWxhYmxlXG4gICAqL1xuICBmdW5jdGlvbiBfdXBkYXRlUmVhZHkod29ya2VyKXtcbiAgICAvLyBJZiB0aGUgdXNlciBjbGlja3Mgb24gdGhlIHVwZGF0ZSBidXR0b24sIHVwZGF0ZSB0aGUgc2VydmljZSB3b3JrZXJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndXBkYXRlLXZlcnNpb24nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsZnVuY3Rpb24oKXtcbiAgICAgIHdvcmtlci5wb3N0TWVzc2FnZSh7YWN0aW9uOidza2lwV2FpdGluZyd9KTtcbiAgICB9KTtcbiAgICAvLyBJZiB0aGUgdXNlciBjbGlja3MgdGhlIGRpc21pc3MgYnV0dG9uLCBoaWRlIHRoZSB0b2FzdFxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkaXNtaXNzLXZlcnNpb24nKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsZnVuY3Rpb24oKXtcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0b2FzdCcpLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xuICAgICAgZm9jdXNlZEVsZW1lbnQuZm9jdXMoKVxuICAgIH0pO1xuICAgIC8vIElmIHRoZSB0b2FzdCBpcyBkaXNwbGF5aW5nLCBsaXN0ZW4gZm9yIGtleWJvYXJkIGV2ZW50c1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0b2FzdCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLGZ1bmN0aW9uKGUpe1xuICAgICAgLy9DaGVjayBmb3IgVGFiIGtleSBwcmVzc1xuICAgICAgaWYoZS5rZXlDb2RlID09PSA5KXtcbiAgICAgICAgXG4gICAgICAgIGlmIChlLnNoaWZ0S2V5KSB7XG4gICAgICAgICAgLy9QcmVzc2VkIFNoaWZ0IFRhYlxuICAgICAgICAgIGlmKGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgPT09IGZpcnN0VGFiU3RvcCkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgbGFzdFRhYlN0b3AuZm9jdXMoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1lbHNle1xuICAgICAgICAgIC8vUHJlc3NlZCBUYWJcbiAgICAgICAgICBpZihkb2N1bWVudC5hY3RpdmVFbGVtZW50ID09PSBsYXN0VGFiU3RvcCkge1xuICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgZmlyc3RUYWJTdG9wLmZvY3VzKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICAvLyBFc2NhcGUgS2V5XG4gICAgICBpZiAoZS5rZXlDb2RlID09PSAyNyl7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0b2FzdCcpLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xuICAgICAgICBmb2N1c2VkRWxlbWVudC5mb2N1cygpXG4gICAgICB9IFxuICAgIH0pO1xuXG4gICAgLy8gUmVtZW1iZXIgd2hhdCB0aGUgbGFzdCBlbGVtZW50IHRoYXQgd2FzIGZvY3VzZWQgd2FzLCBhbmQgbWFrZSBpdCBmb2N1c2FibGUgc28gd2UgY2FuIHJldHVybiB0byBpdFxuICAgIGZvY3VzZWRFbGVtZW50ID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcbiAgICBmb2N1c2VkRWxlbWVudC50YWJpbmRleCA9IDE7XG4gICBcbiAgICAvLyBXaGVuIHRoZSB0b2FzdCBpcyB2aXNpYmxlLCB0aGlzIGlzIHdoYXQgd2UnbGwgdXNlIHRvIHRlbXBvcmFyaWx5IHRyYXAgZm9jdXNcbiAgICB2YXIgZm9jdXNhYmxlRWxlbWVudHNTdHJpbmcgPSAnI3RvYXN0IHAsICN1cGRhdGUtdmVyc2lvbiwgI2Rpc21pc3MtdmVyc2lvbic7XG4gICAgdmFyIGZvY3VzYWJsZUVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChmb2N1c2FibGVFbGVtZW50c1N0cmluZyk7XG4gICAgZm9jdXNhYmxlRWxlbWVudHMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmb2N1c2FibGVFbGVtZW50cyk7XG4gICAgXG4gICAgdmFyIGZpcnN0VGFiU3RvcCA9IGZvY3VzYWJsZUVsZW1lbnRzWzBdO1xuICAgIHZhciBsYXN0VGFiU3RvcCA9IGZvY3VzYWJsZUVsZW1lbnRzW2ZvY3VzYWJsZUVsZW1lbnRzLmxlbmd0aCAtMV07XG5cbiAgICAvLyBPayB0aW1lIHRvIHNob3cgdGhlIHRvYXN0IGFuZCBmb2N1cyBvbiBpdFxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0b2FzdCcpLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0b2FzdCBwJykuZm9jdXMoKTtcblxuICB9XG4gIFxuXG4gIC8qKlxuICAgKiBMaXN0ZW5zIGZvciBhIGNoYW5nZSBpbiB0aGUgU1csIHJlbG9hZHMgdGhlIHBhZ2UgYXMgYSByZXN1bHRcbiAgICovXG4gIHZhciByZWZyZXNoaW5nO1xuICBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlci5hZGRFdmVudExpc3RlbmVyKCdjb250cm9sbGVyY2hhbmdlJywgZnVuY3Rpb24oKSB7XG4gICAgY29uc29sZS5sb2coJ2NvbnRyb2xsZXIgY2hhbmdlJylcbiAgICBpZiAocmVmcmVzaGluZykgcmV0dXJuO1xuICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICByZWZyZXNoaW5nID0gdHJ1ZTtcbiAgfSk7XG59XG5cblxuXG4vKipcbiAgKiBJbml0aWFsaXplIG1hcCBhcyBzb29uIGFzIHRoZSBwYWdlIGlzIGxvYWRlZC5cbiAqL1xuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIChldmVudCkgPT4geyAgXG4gIGluaXRNYXAoKTtcbiAgfSk7XG4gIFxuICAvKipcbiAgICogSW5pdGlhbGl6ZSBsZWFmbGV0IG1hcFxuICAgKi9cbiAgaW5pdE1hcCA9ICgpID0+IHtcbiAgZmV0Y2hSZXN0YXVyYW50RnJvbVVSTCgoZXJyb3IsIHJlc3RhdXJhbnQpID0+IHtcbiAgICBpZiAoZXJyb3IpIHsgLy8gR290IGFuIGVycm9yIVxuICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgfSBlbHNlIHsgICAgICBcbiAgICAgIHNlbGYubmV3TWFwID0gTC5tYXAoJ21hcCcsIHtcbiAgICAgICAgY2VudGVyOiBbcmVzdGF1cmFudC5sYXRsbmcubGF0LCByZXN0YXVyYW50LmxhdGxuZy5sbmddLFxuICAgICAgICB6b29tOiAxNixcbiAgICAgICAgc2Nyb2xsV2hlZWxab29tOiBmYWxzZVxuICAgICAgfSk7XG4gICAgICBMLnRpbGVMYXllcignaHR0cHM6Ly9hcGkudGlsZXMubWFwYm94LmNvbS92NC97aWR9L3t6fS97eH0ve3l9LmpwZzcwP2FjY2Vzc190b2tlbj17bWFwYm94VG9rZW59Jywge1xuICAgICAgICBtYXBib3hUb2tlbjogJ3BrLmV5SjFJam9pWm1GeWNtVnNiSE5qY21sd2RDSXNJbUVpT2lKamFtSmlhVGwzZEhNeE9HeHNNekp3WlRsbVluTjRaSE41SW4wLjZFeTUwZWwwYXR3akR5Z09fY08wc0EnLFxuICAgICAgICBtYXhab29tOiAxOCxcbiAgICAgICAgYXR0cmlidXRpb246ICdNYXAgZGF0YSAmY29weTsgPGEgaHJlZj1cImh0dHBzOi8vd3d3Lm9wZW5zdHJlZXRtYXAub3JnL1wiPk9wZW5TdHJlZXRNYXA8L2E+IGNvbnRyaWJ1dG9ycywgJyArXG4gICAgICAgICAgJzxhIGhyZWY9XCJodHRwczovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktc2EvMi4wL1wiPkNDLUJZLVNBPC9hPiwgJyArXG4gICAgICAgICAgJ0ltYWdlcnkgwqkgPGEgaHJlZj1cImh0dHBzOi8vd3d3Lm1hcGJveC5jb20vXCI+TWFwYm94PC9hPicsXG4gICAgICAgIGlkOiAnbWFwYm94LnN0cmVldHMnICAgIFxuICAgICAgfSkuYWRkVG8obmV3TWFwKTtcbiAgICAgIERCSGVscGVyLm1hcE1hcmtlckZvclJlc3RhdXJhbnQoc2VsZi5yZXN0YXVyYW50LCBzZWxmLm5ld01hcCk7XG4gICAgfVxuICB9KTtcbiAgfSAgXG4gIFxuICAvKiB3aW5kb3cuaW5pdE1hcCA9ICgpID0+IHtcbiAgfSAqL1xuXG4vKipcbiAqIEdldCBjdXJyZW50IHJlc3RhdXJhbnQgZnJvbSBwYWdlIFVSTC5cbiAqL1xuZmV0Y2hSZXN0YXVyYW50RnJvbVVSTCA9IChjYWxsYmFjaykgPT4ge1xuICBpZiAoc2VsZi5yZXN0YXVyYW50KSB7IC8vIHJlc3RhdXJhbnQgYWxyZWFkeSBmZXRjaGVkIVxuICAgIGNhbGxiYWNrKG51bGwsIHNlbGYucmVzdGF1cmFudClcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgaWQgPSBnZXRQYXJhbWV0ZXJCeU5hbWUoJ2lkJyk7XG4gIGlmICghaWQpIHsgLy8gbm8gaWQgZm91bmQgaW4gVVJMXG4gICAgZXJyb3IgPSAnTm8gcmVzdGF1cmFudCBpZCBpbiBVUkwnXG4gICAgY2FsbGJhY2soZXJyb3IsIG51bGwpO1xuICB9IGVsc2Uge1xuICAgIERCSGVscGVyLmZldGNoUmVzdGF1cmFudEJ5SWQoaWQsIChlcnJvciwgcmVzdGF1cmFudCkgPT4ge1xuICAgICAgc2VsZi5yZXN0YXVyYW50ID0gcmVzdGF1cmFudDtcbiAgICAgIGlmICghcmVzdGF1cmFudCkge1xuICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgZmlsbFJlc3RhdXJhbnRIVE1MKCk7XG4gICAgICBjYWxsYmFjayhudWxsLCByZXN0YXVyYW50KVxuICAgIH0pO1xuICB9XG59XG5cbi8qKlxuICogQ3JlYXRlIHJlc3RhdXJhbnQgSFRNTCBhbmQgYWRkIGl0IHRvIHRoZSB3ZWJwYWdlXG4gKi9cbmZpbGxSZXN0YXVyYW50SFRNTCA9IChyZXN0YXVyYW50ID0gc2VsZi5yZXN0YXVyYW50KSA9PiB7XG4gIGNvbnN0IG5hbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzdGF1cmFudC1uYW1lJyk7XG4gIG5hbWUuaW5uZXJIVE1MID0gcmVzdGF1cmFudC5uYW1lO1xuXG4gIC8vIFJldmlldyBvZiB0aGUgcmVzdGF1cmFudFxuICBjb25zdCByYXRpbmcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmF0aW5nJyk7XG4gIGNvbnN0IGVtcHR5U3RhcnMgPSA1IC0gREJIZWxwZXIucmF0aW5nRm9yUmVzdGF1cmFudChyZXN0YXVyYW50KTtcbiAgZm9yKGxldCBpPTA7IGkgPCBEQkhlbHBlci5yYXRpbmdGb3JSZXN0YXVyYW50KHJlc3RhdXJhbnQpOyBpKyspe1xuICAgIGNvbnN0IGZ1bGxzdGFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gICAgZnVsbHN0YXIuY2xhc3NOYW1lPVwicmVzdGF1cmFudF9fc3RhciByZXN0YXVyYW50X19zdGFyLS1mdWxsXCI7XG4gICAgZnVsbHN0YXIuc3JjID0gXCIvaW1nL2Z1bGxzdGFyLnN2Z1wiO1xuICAgIGZ1bGxzdGFyLmFsdCA9IFwiXCJcbiAgICByYXRpbmcuYXBwZW5kKGZ1bGxzdGFyKTtcbiAgfVxuICBmb3IobGV0IGk9MDsgaSA8IGVtcHR5U3RhcnM7IGkrKyl7XG4gICAgY29uc3QgZW1wdHlzdGFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gICAgZW1wdHlzdGFyLmNsYXNzTmFtZT1cInJlc3RhdXJhbnRfX3N0YXIgcmVzdGF1cmFudF9fc3Rhci0tZW1wdHlcIjtcbiAgICBlbXB0eXN0YXIuc3JjID0gXCIvaW1nL2VtcHR5c3Rhci5zdmdcIjtcbiAgICBlbXB0eXN0YXIuYWx0PSBcIlwiXG4gICAgcmF0aW5nLmFwcGVuZChlbXB0eXN0YXIpO1xuICB9XG5cbiAgY29uc3QgYWRkcmVzcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXN0YXVyYW50LWFkZHJlc3MnKTtcbiAgYWRkcmVzcy5pbm5lckhUTUwgPSByZXN0YXVyYW50LmFkZHJlc3M7XG5cbiAgY29uc3QgYWRkcmVzc2ljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgYWRkcmVzc2ljb24uY2xhc3NOYW1lID0gJ3Jlc3RhdXJhbnRkZXRhaWxfX2ljb24nO1xuICBhZGRyZXNzaWNvbi5zcmMgPSAnL2ltZy93YXlwb2ludC5zdmcnO1xuICBhZGRyZXNzaWNvbi5hbHQgPSAnJztcbiAgYWRkcmVzcy5wcmVwZW5kKGFkZHJlc3NpY29uKVxuXG4gIGNvbnN0IGltYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc3RhdXJhbnQtaW1nJyk7XG4gIGltYWdlLmNsYXNzTmFtZSA9ICdyZXN0YXVyYW50LWltZydcbiAgaW1hZ2Uuc3JjID0gREJIZWxwZXIuaW1hZ2VVcmxGb3JSZXN0YXVyYW50KHJlc3RhdXJhbnQpO1xuICBpbWFnZS5hbHQgPSBEQkhlbHBlci5pbWFnZVRleHRGb3JSZXN0YXVyYW50KHJlc3RhdXJhbnQpO1xuICBpbWFnZS5zcmNzZXQgPSBEQkhlbHBlci5pbWFnZVNyY1NldEZvclJlc3RhdXJhbnQocmVzdGF1cmFudCk7XG5cbiAgY29uc3QgY3Vpc2luZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyZXN0YXVyYW50LWN1aXNpbmUnKTtcbiAgY3Vpc2luZS5pbm5lckhUTUwgPSByZXN0YXVyYW50LmN1aXNpbmVfdHlwZTtcblxuICBjb25zdCBjdWlzaW5laWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICBjdWlzaW5laWNvbi5jbGFzc05hbWUgPSAncmVzdGF1cmFudGRldGFpbF9faWNvbic7XG4gIGN1aXNpbmVpY29uLnNyYyA9ICcvaW1nL2N1aXNpbmUuc3ZnJztcbiAgY3Vpc2luZWljb24uYWx0ID0gJyc7XG4gIGN1aXNpbmUucHJlcGVuZChjdWlzaW5laWNvbilcblxuICAvLyBmaWxsIG9wZXJhdGluZyBob3Vyc1xuICBpZiAocmVzdGF1cmFudC5vcGVyYXRpbmdfaG91cnMpIHtcbiAgICBmaWxsUmVzdGF1cmFudEhvdXJzSFRNTCgpO1xuXG4gICAgY29uc3QgaG91cnMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzdGF1cmFudGRldGFpbF9faG91cnNjb250YWluZXInKTtcbiAgXG4gICAgY29uc3QgaG91cnNpY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gICAgaG91cnNpY29uLmNsYXNzTmFtZSA9ICdyZXN0YXVyYW50ZGV0YWlsX19pY29uJztcbiAgICBob3Vyc2ljb24uc3JjID0gJy9pbWcvY2xvY2suc3ZnJztcbiAgICBob3Vyc2ljb24uYWx0ID0gJyc7XG4gICAgaG91cnMucHJlcGVuZChob3Vyc2ljb24pXG5cbiAgfVxuICAvLyBmaWxsIHJldmlld3NcbiAgZmlsbFJldmlld3NIVE1MKCk7XG59XG5cbi8qKlxuICogQ3JlYXRlIHJlc3RhdXJhbnQgb3BlcmF0aW5nIGhvdXJzIEhUTUwgdGFibGUgYW5kIGFkZCBpdCB0byB0aGUgd2VicGFnZS5cbiAqL1xuZmlsbFJlc3RhdXJhbnRIb3Vyc0hUTUwgPSAob3BlcmF0aW5nSG91cnMgPSBzZWxmLnJlc3RhdXJhbnQub3BlcmF0aW5nX2hvdXJzKSA9PiB7XG4gIGNvbnN0IGhvdXJzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jlc3RhdXJhbnQtaG91cnMnKTtcbiAgZm9yIChsZXQga2V5IGluIG9wZXJhdGluZ0hvdXJzKSB7XG4gICAgY29uc3Qgcm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndHInKTtcblxuICAgIGNvbnN0IGRheSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RkJyk7XG4gICAgZGF5LmNsYXNzTmFtZSA9ICdyZXN0YXVyYW50ZGV0YWlsX19kYXknO1xuICAgIGRheS5pbm5lckhUTUwgPSBrZXk7XG4gICAgcm93LmFwcGVuZENoaWxkKGRheSk7XG5cbiAgICBjb25zdCB0aW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGQnKTtcbiAgICB0aW1lLmNsYXNzTmFtZSA9ICdyZXN0YXVyYW50ZGV0YWlsX19ob3VyJztcbiAgICB0aW1lLmlubmVySFRNTCA9IG9wZXJhdGluZ0hvdXJzW2tleV07XG4gICAgcm93LmFwcGVuZENoaWxkKHRpbWUpO1xuXG4gICAgaG91cnMuYXBwZW5kQ2hpbGQocm93KTtcbiAgfVxufVxuXG4vKipcbiAqIENyZWF0ZSBhbGwgcmV2aWV3cyBIVE1MIGFuZCBhZGQgdGhlbSB0byB0aGUgd2VicGFnZS5cbiAqL1xuZmlsbFJldmlld3NIVE1MID0gKHJldmlld3MgPSBzZWxmLnJlc3RhdXJhbnQucmV2aWV3cykgPT4ge1xuICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmV2aWV3cy1jb250YWluZXInKTtcbiAgY29uc3QgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdoMycpO1xuICB0aXRsZS5pbm5lckhUTUwgPSAnUmV2aWV3cyc7XG4gIHRpdGxlLmNsYXNzTmFtZSA9ICdyZXN0YXVyYW50ZGV0YWlsX19yZXZpZXdzdGl0bGUnO1xuICBjb250YWluZXIuYXBwZW5kQ2hpbGQodGl0bGUpO1xuXG4gIGlmICghcmV2aWV3cykge1xuICAgIGNvbnN0IG5vUmV2aWV3cyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgICBub1Jldmlld3MuaW5uZXJIVE1MID0gJ05vIHJldmlld3MgeWV0ISc7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKG5vUmV2aWV3cyk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGNvbnN0IHVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jldmlld3MtbGlzdCcpO1xuICByZXZpZXdzLmZvckVhY2gocmV2aWV3ID0+IHtcbiAgICB1bC5hcHBlbmRDaGlsZChjcmVhdGVSZXZpZXdIVE1MKHJldmlldykpO1xuICB9KTtcbiAgY29udGFpbmVyLmFwcGVuZENoaWxkKHVsKTtcbn1cblxuLyoqXG4gKiBDcmVhdGUgcmV2aWV3IEhUTUwgYW5kIGFkZCBpdCB0byB0aGUgd2VicGFnZS5cbiAqL1xuY3JlYXRlUmV2aWV3SFRNTCA9IChyZXZpZXcpID0+IHtcbiAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuICBsaS5jbGFzc05hbWUgPSAncmVzdGF1cmFudGRldGFpbF9fcmV2aWV3JztcbiAgY29uc3QgY29tbWVudEhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBjb21tZW50SGVhZGVyLmNsYXNzTmFtZSA9ICdyZXN0YXVyYW50ZGV0YWlsX19jb21tZW50aGVhZGVyJztcblxuICBjb25zdCBsZWZ0ZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGxlZnRkaXYuY2xhc3NOYW1lID0gJ3Jlc3RhdXJhbnRkZXRhaWxfX2F2YXRhcmNvbnRhaW5lcic7XG5cbiAgY29uc3QgYXZhdGFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaW1nJyk7XG4gIGF2YXRhci5zcmMgID0gJy9pbWcvYXZhdGFyLnN2Zyc7XG4gIGF2YXRhci5jbGFzc05hbWUgPSAncmVzdGF1cmFudGRldGFpbF9fYXZhdGFyJztcbiAgYXZhdGFyLmFsdCA9ICdBdmF0YXIgcGhvdG8nO1xuICBsZWZ0ZGl2LmFwcGVuZENoaWxkKGF2YXRhcik7XG4gIGNvbW1lbnRIZWFkZXIuYXBwZW5kQ2hpbGQobGVmdGRpdik7XG5cbiAgY29uc3QgcmlnaHRkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgcmlnaHRkaXYuY2xhc3NOYW1lID0gJ3Jlc3RhdXJhbnRkZXRhaWxfX25hbWVjb250YWluZXInO1xuXG4gIGNvbnN0IG5hbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gIG5hbWUuaW5uZXJIVE1MID0gcmV2aWV3Lm5hbWU7XG4gIHJpZ2h0ZGl2LmFwcGVuZENoaWxkKG5hbWUpO1xuICBcbiAgLy8gQ3JlYXRlIFN0YXJzIGZvciBSZXZpZXdcbiAgY29uc3QgaW5kaXZpZHVhbHJhdGluZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgaW5kaXZpZHVhbHJhdGluZy5jbGFzc05hbWUgPSAncmVzdGF1cmFudGRldGFpbF9faW5kaXZpZHVhbHJldmlld3JhdGluZyc7XG4gIGNvbnN0IGVtcHR5U3RhcnMgPSA1IC0gcGFyc2VJbnQocmV2aWV3LnJhdGluZyk7XG4gIGZvcihsZXQgaT0wOyBpIDwgcmV2aWV3LnJhdGluZzsgaSsrKXtcbiAgICBjb25zdCBmdWxsc3RhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICAgIGZ1bGxzdGFyLmNsYXNzTmFtZT1cInJlc3RhdXJhbnRfX3N0YXIgcmVzdGF1cmFudF9fc3Rhci0tZnVsbFwiO1xuICAgIGZ1bGxzdGFyLnNyYyA9IFwiL2ltZy9mdWxsc3Rhci5zdmdcIjtcbiAgICBmdWxsc3Rhci5hbHQgPSBcIlwiXG4gICAgaW5kaXZpZHVhbHJhdGluZy5hcHBlbmQoZnVsbHN0YXIpO1xuICB9XG4gIGZvcihsZXQgaT0wOyBpIDwgZW1wdHlTdGFyczsgaSsrKXtcbiAgICBjb25zdCBlbXB0eXN0YXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbWcnKTtcbiAgICBlbXB0eXN0YXIuY2xhc3NOYW1lPVwicmVzdGF1cmFudF9fc3RhciByZXN0YXVyYW50X19zdGFyLS1lbXB0eVwiO1xuICAgIGVtcHR5c3Rhci5zcmMgPSBcIi9pbWcvZW1wdHlzdGFyLnN2Z1wiO1xuICAgIGVtcHR5c3Rhci5hbHQ9IFwiXCJcbiAgICBpbmRpdmlkdWFscmF0aW5nLmFwcGVuZChlbXB0eXN0YXIpO1xuICB9XG5cbiAgcmlnaHRkaXYuYXBwZW5kQ2hpbGQoaW5kaXZpZHVhbHJhdGluZyk7XG4gIGNvbnN0IGRhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gIGRhdGUuY2xhc3NOYW1lID0gJ3Jlc3RhdXJhbnRkZXRhaWxfX3Jldmlld2RhdGUnXG4gIGNvbnN0IHJldmlld2RhdGUgPSBuZXcgRGF0ZShyZXZpZXcuZGF0ZSk7XG4gIGNvbnN0IHRvZGF5ZGF0ZSA9IG5ldyBEYXRlKCk7XG4gIC8vIFN1YnRyYWN0IHRvZGF5cyBkYXRlIGZyb20gdGhlIGRhdGUgb2YgdGhlIHJldmlldywgdGhlbiBmb3JtYXQgaW50byBkYXlzXG4gIGNvbnN0IGRheXNkaWZmZXJlbmNlID0gTWF0aC5yb3VuZCgodG9kYXlkYXRlIC0gcmV2aWV3ZGF0ZSkvMTAwMC82MC82MC8yNClcbiAgZGF0ZS5pbm5lckhUTUwgPSBgJHtkYXlzZGlmZmVyZW5jZX0gYWdvYDtcbiAgcmlnaHRkaXYuYXBwZW5kQ2hpbGQoZGF0ZSk7XG5cbiAgY29tbWVudEhlYWRlci5hcHBlbmRDaGlsZChyaWdodGRpdik7IFxuICBsaS5hcHBlbmRDaGlsZChjb21tZW50SGVhZGVyKTtcblxuICBjb25zdCBjb21tZW50cyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3AnKTtcbiAgY29tbWVudHMuaW5uZXJIVE1MID0gcmV2aWV3LmNvbW1lbnRzO1xuICBsaS5hcHBlbmRDaGlsZChjb21tZW50cyk7XG5cbiAgcmV0dXJuIGxpO1xufVxuXG4vKipcbiAqIEdldCBhIHBhcmFtZXRlciBieSBuYW1lIGZyb20gcGFnZSBVUkwuXG4gKi9cbmdldFBhcmFtZXRlckJ5TmFtZSA9IChuYW1lLCB1cmwpID0+IHtcbiAgaWYgKCF1cmwpXG4gICAgdXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XG4gIG5hbWUgPSBuYW1lLnJlcGxhY2UoL1tcXFtcXF1dL2csICdcXFxcJCYnKTtcbiAgY29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKGBbPyZdJHtuYW1lfSg9KFteJiNdKil8JnwjfCQpYCksXG4gICAgcmVzdWx0cyA9IHJlZ2V4LmV4ZWModXJsKTtcbiAgaWYgKCFyZXN1bHRzKVxuICAgIHJldHVybiBudWxsO1xuICBpZiAoIXJlc3VsdHNbMl0pXG4gICAgcmV0dXJuICcnO1xuICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHJlc3VsdHNbMl0ucmVwbGFjZSgvXFwrL2csICcgJykpO1xufVxuIl19
